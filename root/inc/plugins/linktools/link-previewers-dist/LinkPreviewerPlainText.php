<?php

/**
 *  Part of the Link Tools plugin for MyBB 1.8.
 *  Copyright (C) 2021 Laird Shaw
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// Disallow direct access to this file for security reasons.
if (!defined('IN_MYBB')) {
	die('Direct access to this file is not allowed.');
}

class LinkPreviewerPlainText extends LinkPreviewer {
	/**
	 * Provisionally support all links (subject to the page to which a
	 * link refers having a content-type of text/html).
	 */
	protected $supported_norm_links_regex = '(^)';

	/**
	 * Set this Previewer's priority to the mid-range (priorities may be
	 * negative).
	 */
	protected $priority = 0;

	/**
	 * This version number should be changed when link previews generated by
	 * this class change, either due its template changing or to changes to
	 * the way the values of the variables supplied to the template are
	 * generated.
	 *
	 * This signals that those link previews should be expired (when the
	 * relevant Link Tools setting is enabled) and that the template in the
	 * database needs to be updated.
	 */
	protected $version = '2.0.0';

	/**
	 * This Previewer needs the page's content and/or content-type both to
	 * determine whether it supports the page as well as to generate a
	 * preview of the page.
	 */
	protected $needs_content_for = LinkPreviewer::NC_FOR_BOTH;

	protected $friendly_name = 'Plain text previewer';

	protected $template = '<div class="lkt-link-preview">
	<a href="$link_safe">
		$link_basename_safe<br />
		<span style="font-size: small;">{$pv_data[\'description_safe\']}</span>
	</a>
</div>';

	/**
	 * Only support previews of plain text content.
	 */
	public function supports_page($link, $content_type, $content) {
		return $content_type === 'text/plain';
	}

	/**
	 * One of the two hearts of the class.
	 */
	public function get_preview_data($link, $content, $content_type) {
		global $mybb;

		if ($content_type != 'text/plain') {
			return '';
		}

		$max_chars = 83;

		$description = trim(preg_replace('(\\s+)', ' ', strip_tags($content)));
		$need_ellipsis_desc = strlen($description) > $max_chars;
		if ($need_ellipsis_desc) {
			$description = my_substr($description, 0, $max_chars);
		}
		$description_safe = htmlspecialchars_uni($description);
		if ($need_ellipsis_desc) $description_safe .= '&hellip;';

		return array('description_safe' => $description_safe);
	}

	/**
	 * The other of the two hearts of the class.
	 */
	protected function get_preview_contents($link, $pv_data) {
		$link_safe = htmlspecialchars_uni($link);
		$link_basename = basename($link);
		$need_ellipsis_basename = my_strlen($link_basename) > $max_chars;
		if ($need_ellipsis_basename) {
			$link_basename = my_substr($link_basename, 0, $max_chars);
		}
		$link_basename_safe = htmlspecialchars_uni($link_basename);
		if ($need_ellipsis_basename) $link_basename_safe .= '&hellip;';

		eval('$preview_contents = "'.$this->get_template_for_eval().'";');

		return $preview_contents;
	}
}
